<h1>News</h1>

<a name="0.8.5"></a><h3>January 13, 2013</h3>

<p>
Today, we update our latest release series 0.8 with the release
of <a href="download.html#release_0.8">Libav 0.8.5</a>. This release
contains several security and bug fixes. Among others, several bugs that
lead to crashes during playback have been fixed in the H.264 and SVQ3
decoder.
</p>

<p>
This release contains security fixes for the following CVEs:
</p>

<ul>
<li/> Indeo 4 (CVE-2012-2791)
<li/> VP5/VP6 (CVE-2012-2783)
<li/> Indeo 3 (CVE-2012-2804)
<li/> MPEG-1/2 (CVE-2012-2803)
<li/> MP3 (CVE-2012-2797)
<li/> AAC (CVE-2012-5144)
<li/> AC-3 (CVE-2012-2802)
<li/> AVS (CVE-2012-2801)
<li/> DFA (CVE-2012-2798)
<ul/>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>

<p>
<em>Enjoy!</em>
</p>

<a name="9.1"></a><h3>January 07, 2013</h3>
<p>
Today, we push out a quick but important update <b>9.1</b>. It fixes a
segfault in <b>libavresample</b> on Windows 32bit platforms when
compiling with MSVC or ICC 10.x, and fixes memory leaks in the Ogg demuxer.
</p>

<p>
You can download the new release, as usual,
from <a href="download.html#release9">our download page</a>.
</p>

<a name="9final"></a><h3>January 05, 2013</h3>
<p>
After several months spent making sure that a sufficient number of our
downstreams is ready, we are now pleased to announce the release of Libav 9
"Plain Nine".
</p>

<p>
The first thing to note is that it is indeed 9, not 0.9. With this release, we
change our versioning scheme to follow our workflow better. This means that the
leading zero, present in our previous version numbers, is dropped. Version
numbers from now on will be in <i>major.minor</i> form, with major releases
updating the major component and stable releases the minor component.
</p>

<p>
A new library arrived in Libav during this development cycle -- its name is
<b>libavresample</b> and it handles audio conversion and mixing. All
users are encouraged to use it instead of the old, now deprecated, audio
conversion API in libavcodec.
</p>

<p>
The <b>libpostproc</b> library now resides in a separate tree. It was fully
independent of the other Libav libraries, not used by any of the tools,
and saw very little development. For these reasons we have decided that it
has no place in Libav. A standalone Git tree is available
at <a href="http://git.videolan.org/?p=libpostproc.git">VideoLAN</a> for
people wishing to use libpostproc.
</p>

<p>
The major versions of the <b>libavcodec</b>, <b>libavformat</b>
and <b>libavfilter</b> libraries have been bumped, so they are not API
or ABI compatible with the 0.8 release.
</p>

<p>
This release brings a number of significant changes in
the <b>libavfilter</b> library. Firstly, all the API dealing with
filter internals is no longer public. The result is that creating
user-side filters will not be supported until libavfilter is more
mature. Secondly, full audio filtering support is now available along
with a set of basic audio filters. We hope that their number will soon
grow significantly. The avconv transcoding tool has of course been
extended to handle audio filtering as well. There were a number of
other API changes, most importantly the addition of the buffer sink
public API.
</p>

<p>
In the <b>libavcodec</b> library, one of the most notable changes is
added support for planar audio (i.e. not interleaved). Many decoders and
encoders, which previously did inefficient (de)interleaving internally,
now <em>only work with planar audio formats</em>. Libavresample can be used for
optimized conversion between interleaved and planar formats.
</p>

<p>
Of big interest to our Windows users, Libav now supports building with the
MSVC compiler. Since MSVC does not support C99 features used extensively
by Libav, this has been accomplished using a
<a href="https://github.com/libav/c99-to-c89/">converter</a>
that turns C99 code to C89. See
<a href="platform.html#Microsoft-Visual-C_002b_002b">here</a>
for more detailed documentation on building Libav with MSVC.
</p>

<p>
As usual, this release also contains support for some new formats, many
smaller new features and countless bug fixes. We can highlight Opus
decoding / encoding through libopus, encoders for Apple ProRes and Ut
Video, 24-bit FLAC encoding, WMA Lossless and RealAudio Lossless decoders,
fragmented MOV/MP4 and ISMV (Smooth Streaming) muxers, a large number of RTMP
improvements and support for cover art in ID3v2, WMA, MP4 and FLAC.
</p>

<p>
See the
<a href="https://git.libav.org/?p=libav.git;a=blob;f=Changelog;h=92098cacd5773f2fbae7b0452afe9f127b74852a;hb=HEAD">Changelog</a>
file for a list of significant changes.
</p>

<p>
You can download the new release, as usual,
from <a href="download.html#release9">our download page</a>.
</p>


<a name="9_beta3"></a><h3>December 21 2012</h3>

<p>
Another two months of developing, testing and polishing later, we are
proud to announce the next beta release. We still
hesitate to finalize the <b>"Plain 9"</b> because it seems that
many of our downstream users have still not caught up. This is meant
as a courtesy to our users and redistributors to ensure a painless upgrade.
</p>

<p>
This tarball comes with the following changes:
</p>

<ul>
<li> ashowinfo audio filter
<li> 24-bit FLAC encoding
<li> audio volume filter
<li> deprecated the avconv -vol option. the volume filter is to be used instead.
<li> multi-channel ALAC encoding up to 7.1
<li> TAK demuxer, parser, and decoder
<li> adaptive frame-level multithreading for H.264
</ul>

<p>
You can download the new release, as usual,
from <a href="download.html#release_9">our download page</a>
</p>

<a name="9_beta2"></a><h3>October 23 2012</h3>

<p>
We are still on track with our <b>next major release codename "Plain
9".</b> Today, we update our beta release with <b>9_beta2</b> based on
the feedback and testing that we got.
<p>

<p>
Compared to the changes listed in the <a href="news.html#9beta1">beta_1
announcement</a>, the following items come in addition:
<ul>
<li> Support for shared libraries with the MSVC toolchain </li>
<li> Metadata (INFO tag) support in WAV muxer </li>
<li> Support building on the Plan 9 operating system </li>
<li> The SONAME of <b>libavutil</b> was bumped to <tt>libavutil.so.52</tt> </li>
<li> Support FF1 codec version 3 </li>
<li> Various other bugfixes and cleanups </li>
</p>
</ul>

<p>
You can download the new release, as usual,
from <a href="download.html#release_9">our download page</a>
</p>

<a name="0.8.2"></a><h3>October 22 2012</h3>

<p>
Today, we update our latest release series 0.8 with the release
of <a href="download.html#release_0.8">Libav 0.8.4</a>. This release
contains several security and bug fixes.
</p>

<p>
The following bugs in our Bugzilla have been fixed:
<ul>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=118">#118</a>: zzufed H.261 file crashes avconv signal 11 (SIGSEGV)
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=203">#203</a>: scale filter has a rounding error
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=245">#245</a>: Reading already freed mem when using vfilters pad and settb
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=265">#265</a>: smacker audio decode regression
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=277">#277</a>: avconv ignores audio bitrate -ab parameter
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=310">#310</a>: avconv hangs when transcoding .flac files
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=327">#327</a>: wmaprodec: Arithmetic exception
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=352">#352</a>: Pad filter pass-through problem
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=367">#367</a>: Crash in bmp_decode_frame() when decoding unusual bmp file
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=373">#373</a>: y4m as input results in "filename.y4m: Operation not permitted"
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=379">#379</a>: Regression in WAV files between 52.72. 2 and 53. 35. 0
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=380">#380</a>: double free in option handling
</ul>
</p>

<p>
This release contains security fixes for the following CVEs:
</p>

<ul>
<li/>CVE-2012-2772
<li/>CVE-2012-2775
<li/>CVE-2012-2776
<li/>CVE-2012-2777
<li/>CVE-2012-2779
<li/>CVE-2012-2784
<li/>CVE-2012-2786
<li/>CVE-2012-2787
<li/>CVE-2012-2788
<li/>CVE-2012-2789
<li/>CVE-2012-2790
<li/>CVE-2012-2793
<li/>CVE-2012-2794
<li/>CVE-2012-2796
<li/>CVE-2012-2798
<li/>CVE-2012-2800
<li/>CVE-2012-2801
<li/>CVE-2012-2802
</ul>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>

<p>
<em>Enjoy!</em>
</p>


<a name="9beta1"></a><h3>October 11, 2012</h3>
<p>
With the next upcoming release, we change our versioning scheme to follow our
workflow better. This means that the leading zero, present in our previous
version numbers, is dropped. Version numbers from now on will be in
<i>major.minor</i> form, with major releases updating the major component and
stable releases the minor component. With this in mind, we are happy to provide
a first preview of our next release <b>version 9</b>.
</p>

<p>
A new library arrived in Libav during this development cycle -- its name is
<b>libavresample</b> and it handles audio conversion and mixing. All
users are encouraged to use it instead of the old, now deprecated, audio
conversion API in libavcodec.
</p>

<p>
The <b>libpostproc</b> library now resides in a separate tree. It was fully
independent of the other Libav libraries, not used by any of the tools
and saw very little development. For these reasons we decided that it
has no place in Libav. A standalone Git tree is available
at <a href="http://git.videolan.org/?p=libpostproc.git">VideoLAN</a> for
people wishing to use libpostproc.
</p>

<p>
The major versions of the <b>libavcodec</b>, <b>libavformat</b>
and <b>libavfilter</b> libraries have been bumped, so they are not API
or ABI compatible with the 0.8 release. The ffmpeg transcoding tool,
kept for compatibility in 0.8, has also been dropped.
</p>

<p>
This release brings a number of significant changes in
the <b>libavfilter</b> library. Firstly, all the API dealing with
filter internals is no longer public. The result is that creating
user-side filters will not be supported until libavfilter is more
mature. Secondly, full audio filtering support is now available along
with a set of basic audio filters. We hope that their number will soon
grow significantly. The avconv transcoding tool has of course been
extended to handle audio filtering as well. There were a number of
other API changes, most importantly the addition of the buffer sink
public API.
</p>

<p>
In the <b>libavcodec</b> library, one of the most notable changes is
added support for planar audio (i.e. not interleaved). Many decoders and
encoders, that previously did inefficient (de)interleaving internally,
now only work with planar audio formats. Libavresample can be used for
optimized conversion between interleaved and planar formats.
</p>

<p>
Of big interest to our Windows users can be newly added support for building
with the MSVC compiler. Since MSVC does not support C99 features used
extensively by Libav, this has been accomplished using a <a
href="https://github.com/rbultje/c99-to-c89/">converter</a> that turns C99 code
to C89. See <a href="platform.html#Microsoft-Visual-C_002b_002b">here</a> for
more detailed documentation on building Libav with MSVC.
</p>

<p>
As usual, this release also contains support for some new formats, many
smaller new features and countless bug fixes. We can highlight Opus
decoding / encoding through libopus, encoders for Apple ProRes and Ut
Video, WMA Lossless and RealAudio Lossless decoders, fragmented MOV/MP4
and ISMV (Smooth Streaming) muxers, a large number of RTMP improvements
and support for cover art in ID3v2, WMA, MP4 and FLAC.
</p>

<p>
See
the <a href="http://git.libav.org/?p=libav.git;a=blob_plain;f=Changelog;h=b4b5294755d7f67f0bf3b091112f688ae8df886d;hb=e578f8f4680f7ad290de64270dc152fb1adb6e6a">Changelog</a>
file for a list of significant changes.
</p>

<p>
Please note that our policy on bug reports has not changed. We still
only accept bug reports against <b>HEAD</b> of the Libav trunk
repository. If you are experiencing issues with any formally released
version of Libav, please try a current version of the development code
to check if the issue still exists. If it does, make your report against
the development code following the usual bug reporting guidelines.
</p>

<p>
You can download the new release, as usual,
from <a href="download.html#release9">our download page</a>
</p>

<a name="lavr_stable"></a><h3>October 05, 2012</h3>
<p>
The <b>libavresample</b> library is now declared stable. There will be no more
API- or ABI-incompatible changes until the next major bump.
</p>

<a name="lavfi_stable_3"></a><h3>July 28, 2012</h3>
<p>
The <b>libavfilter</b> library is hereby declared stable. This means there will
be no more API- or ABI-incompatible changes until the next major bump.
</p>

<a name="lavfi_bump_3"></a><h3>June 22, 2012</h3>
<p>
The major version of the <b>libavfilter</b> library has been bumped. This means
that ABI and API compatibility has been broken and some deprecated functions and
structures have been removed.
</p>

<p>
Most of those were related to filter internals, which are now private. User-side
filters are no longer officially supported until libavfilter reaches a more
mature state.
</p>

<p>
The libavfilter ABI is now declared unstable until further notice (stabilizing
it should take a couple of weeks at most).
</p>

<a name="0.8.3_and_friends"></a><h3>June 9, 2012</h3>
<p>
We have been busy lately! Today, we are updating all 4 of our release trees.
</p>

<p>
Fresh from the release team we are introducing
<a href="download.html#release_0.8">0.8.3</a>,
<a href="download.html#release_0.7">0.7.6</a>,
<a href="download.html#release_0.6">0.6.6</a> and
<a href="download.html#release_0.5">0.5.9</a>.
</p>

<p>
The following bugs in our Bugzilla have been fixed:
</p>

<ul>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=118">#118</a>:
zzufed H.261 file crashes avconv signal 11 (SIGSEGV)
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=145">#145</a>:
signal 11 (SIGSEGV) on input from corrupted file
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=146">#146</a>:
zzufed FRAPS files crashes avconv signal 11 (SIGSEGV)
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=197">#197</a>:
Read errors in kega decoder
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=198">#198</a>:
vorbis decoder infinite loop
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=199">#199</a>:
vorbis decoder FPE
</ul>

<p>
<b>Several bugs and crashes have been fixed in the following codecs:</b> AAC,
ADPCM, ATRAC3, CELP, DPCM, DXVA2, H.263, H.264, Kega, KMVC, Motion Pixels,
MJPEG-B, PNG, QDM2, Shorten, Westwood VQA
</p>

<p>
<b>Several bugs and crashes have been fixed in the following formats:</b> ASF,
DV, EA &amp; EAtqi, ID3v2, NSV
</p>

<p>
These releases contain security fixes for the following CVEs:
</p>

<ul>
<li/>CVE-2012-0947
<li/>CVE-2012-0858
<li/>CVE-2012-0853
<li/>CVE-2012-0852
<li/>CVE-2012-0851
<li/>CVE-2012-0850
<li/>CVE-2011-4031
<li/>CVE-2011-3952
<li/>CVE-2011-3951
<li/>CVE-2011-3947
<li/>CVE-2011-3945
<li/>CVE-2011-3940
<li/>CVE-2011-3937
<li/>CVE-2011-3936
<li/>CVE-2011-3929
</ul>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>

<p>
<em>Enjoy!</em>
</p>

<a name="linuxtag_2012"></a><h3>May 22, 2012</h3>
<p>
As every year some members from our crew will be trolling^Wattending
<a href="http://linuxtag.org/">LinuxTag</a> in Berlin this week.
Meet us at our booth, have a chat and if you have broken samples,
bring them along and watch us trying to fix them.
</p>


<a name="0.8.2"></a><h3>May 4 2012</h3>

<p>
Today, we update our latest release series 0.8 with the release
of <a href="download.html#release_0.8">Libav 0.8.2</a>. This release
contains a security fix for vqavideo filed as CVE-2012-0947.
</p>

<p>
The following bug in our Bugzilla has been fixed:
<ul>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=278">#278</a>: fate-motionpixel overread in ff_cropTbl
</ul>
</p>

<p>
<b>Several bugs and crashes have been fixed in the following codecs:</b>
  AAC, APE, H.263, H.264, Indeo 4, Mimic, MJPEG, Motion Pixels Video, RAW,
  TTA, VC1, VQA, WMA Voice, vqavideo (CVE-2012-0947).
</p>

<p>
<b>Several bugs and crashes have been fixed in the following formats:</b>
  ASF, ID3v2, MOV, xWMA
</p>

<p>
<em>This release additionally updates the following codecs to the bytestream2 API,
and therefore benefits from additional overflow checks:</em>
  truemotion2, utvideo, vqavideo.
</p>

<p>
This release now properly reads from .avpreset files.
</p>

<p>
Distributors and system integrators are encouraged to update and share their patches against our release branches.
</p>

<p>
<em>Enjoy!</em>
</p>

<a name="0.7.5"></a><h3>Apr 8 2012</h3>

<p>
Today, we update our latest release series 0.7 with the release
<a href="download.html#release_0.7">Libav 0.7.5</a>. As usual, this release
includes a number of functional corrections and security fixes, such as:
</p>

<ul>
<li/>CVE-2012-0848
<li/>CVE-2012-0853
<li/>CVE-2012-0858
<li/>CVE-2011-3929
<li/>CVE-2011-3936
<li/>CVE-2011-3937
<li/>CVE-2011-3940
<li/>CVE-2011-3945
<li/>CVE-2011-3947
</ul>

<p>
<b>Several bugs and crashes have been fixed in the following codecs:</b>
  4xm, AAC, AC3, ADPCM.C, ALS, ANM, AVS, Atrac3, Bink, Bitmap Brothers
  JV, COOK, CamStudio, Cinepak, DCA, DSI CIN, EA CMV, FLAC, Fraps FPS1,
  H263, H264, Huffyuv, KMVC, Kega Game Video, LCL, MJPEG, MPEG1/2
  encoder, Motion Pixels, Musepack SV7, Musepack SV8, Nellymoser, QCELP,
  QDM2, QT RPZA, QT SVQ3, Qt RLE, QuickDraw, RAW, RV10, RV34, SIPR,
  Shorten, Smacker, SubRib, TIFF, Tiertex Limited SEQ, Truemotion2,
  V.Flash PTX, VC1, VMware Screen Codec, VP5, VP6, VP8, Vorbis, WMA, WMA
  PRO, WMA Voice, WavPack, Westwood SNDx, Wing Commander/Xan.
</p>

<p>
<b>Several bugs and crashes have been fixed in the following formats:</b>
  4xm, ASF, AVS, DV, FLV, Matroska, Musepack SV8, MPEG, MXF, NSV, RM,
  Segafilm, Smacker, Sierra SOL, SWF.
</p>

<p>
<b>Several bugs and crashes have been fixed in the following filters:</b>
  avfiltergraph, lavfi, vf_unsharp, vf_scale, vf_pad, vf_yadif, vf_yadif.
</p>

<p>
Libswscale has a fix for a potential overflow with large image sizes.
</p>

<p>
Please see the
file <a href="http://git.libav.org/?p=libav.git;a=blob;f=doc/APIchanges;hb=refs/heads/release/0.7">doc/APIChanges</a>
and the Doxygen documentation for further information.
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>


<a name="gsoc2012"></a><h3> Mar 16 2012</h3>
<p>
Libav has been accepted as mentoring organization for
<a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2012">
Google Summer of Code</a>. Here is the
<a href="http://www.google-melange.com/gsoc/org/google/gsoc2012/libav">
Google SoC Libav page</a>.
</p>
<p>
We have a list of
<a href="http://wiki.multimedia.cx/index.php?title=Libav_Summer_Of_Code_2012">
proposed project ideas</a> available so, if you think you might be interested,
head over there to see if there is any project on which you wish to work and for
which you may wish to make an application. The list is still in flux, and you're
free to come up with your own ideas, but note that proposals should be closely
tied to the progression of Libav's code base.
</p>
<p>
If you're a student who thinks you have what it takes, please read
<a href="http://wiki.multimedia.cx/index.php?title=Libav_Summer_Of_Code_2012#How_it_works">
how it works</a> and contact us on our <a href="contact.html">libav-devel</a>
mailing list or on <a href="http://www.freenode.net">IRC</a> in the channel
#libav-devel.
</p>
<p>
The sooner you start communicating with us and working within
our code base, the sooner both you and we will ascertain your suitability and
you will get used to our development methodology. You have until the application
deadline to complete your small task. Good luck!
</p>

<a name="0.8.1"></a><h3>Mar 15 2012</h3>

<p>
Today, we update our latest release series 0.8 with the release
<a href="download.html#release_0.8">Libav 0.8.1</a>. As usual, this release
includes a number of functional corrections and security fixes, such as:
</p>

<ul>
<li/>CVE-2012-0848
<li/>CVE-2012-0853
<li/>CVE-2012-0858
<li/>CVE-2011-3929
<li/>CVE-2011-3936
<li/>CVE-2011-3937
<li/>CVE-2011-3940
<li/>CVE-2011-3945
<li/>CVE-2011-3947
<li/>CVE-2011-3951
<li/>CVE-2011-3952
</ul>

<p>
The following bugs in our Bugzilla have been fixed:
</p>

<ul>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=212">http://bugzilla.libav.org/show_bug.cgi?id=212</a>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=216">http://bugzilla.libav.org/show_bug.cgi?id=216</a>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=220">http://bugzilla.libav.org/show_bug.cgi?id=220</a>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=221">http://bugzilla.libav.org/show_bug.cgi?id=221</a>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=227">http://bugzilla.libav.org/show_bug.cgi?id=227</a>
<li/><a href="http://bugzilla.libav.org/show_bug.cgi?id=237">http://bugzilla.libav.org/show_bug.cgi?id=237</a>
</ul>

<p>
<b>Several bugs and crashes have been fixed in the following codecs:</b>
AAC, AC-3, ADPCM, AMR (both NB and WB), ATRAC3, CAVS, Cook, camstudio,
DCA, DPCM, DSI CIN, DV, EA TGQ, FLAC, fraps, G.722 (both encoder and
decoder), H.264, huvffyuv, BB JV decoder, Indeo 3, KGV1, LCL, the
libx264 wrapper, MJPEG, mp3on4, Musepack, MPEG1/2, PNG, QDM2, Qt RLE,
ROQ, RV10, RV30/RV34//RV40, shorten, smacker, subrip, SVQ3, TIFF,
Truemotion2, TTA, VC1, VMware Screen codec, Vorbis, VP5, VP6, WMA,
Westwood SNDx, XXAN.
</p>

<p>
<em>This release additionally updates the following codecs to the
bytestream2 API, and therefore benefit from additional overflow
checks</em>: XXAN, ALG MM, TQG, SMC, Qt SMC, ROQ, PNG
</p>

<p>
<b>Several bugs and crashes have been fixed in the following formats:</b>
AIFF, ASF, DV, Matroska, NSV, MOV, MPEG-TS, Smacker, Sony OpenMG, RM,
SWF.
</p>

<p>
Libswscale has a fix for a potential overflow with large image sizes.
</p>

<p>
The following <b>APIs have been added</b>:
</p>

<ul>
<li/>avcodec_is_open()
<li/>avformat_get_riff_video_tags()
<li/>avformat_get_riff_audio_tags()
</ul>

<p>
Please see the
file <a href="http://git.libav.org/?p=libav.git;a=blob;f=doc/APIchanges;hb=refs/heads/release/0.8">doc/APIChanges</a>
and the Doxygen documentation for further information.
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>

<a name="tree_stable"></a><h3>Feb 28 2012</h3>

<p>
The tree is hereby declared stable again. There will be no more API or ABI
compatibility breaks until the next major bump.
</p>

<a name="small_bump"></a><h3>Jan 27 2012</h3>

<p>
Major versions of the <b>libavformat</b> and <b>libavcodec</b> libraries have
been bumped, thus <b>breaking ABI and API compatibility</b> with the recent
0.8 release. As usual, the ABI should be considered unstable until further
notice (a few weeks at most).
</p>

<p>
This step allows us to remove a large amount of obsolete code (over 3000 lines).
Users who still did not update to the latest API must do so now to be able to use
this new major version. The bump also allows us to enable protocol private
options in libavformat and fix some outstanding problems with options passing in
the libx264 wrapper.
</p>

<p>
Furthermore, the legacy <b>ffmpeg</b> conversion tool has been removed. Only
<b>avconv</b> is available now. Shared builds of Libav now also disable the
<b>avserver</b> tool. <b>avserver</b> can only be linked with Libav statically
because it uses internal library symbols (volunteers to fix this are very
welcome).
</p>

<a name="0.8"></a><h3>Jan 21 2012</h3>

<p>
We are pleased to announce the availability of our next major
release <a href="download.html#release_0.8"> Libav 0.8</a>, which is
codenamed "Forbidden Fruit". Unlike our last major release, this release
is a binary compatible drop-in replacement for the 0.7 release series.
</p>

<p>
This release continues the API cleanups that have begun with the
previous release. While it remains binary compatible with 0.7, many
parts of the public API were deprecated and will be removed in the git
master and later releases. Please consult
the <a href="http://git.libav.org/?p=libav.git;a=blob;f=doc/APIchanges;hb=refs/heads/release/0.8">
doc/APIchanges</a> file to see intended replacements for the deprecated
APIs.
</p>

<p>
Furthermore, our work on the 'ffmpeg' command-line tool has resulted in
major revisions to its interface. In order to not break existing scripts
and applications, we have chosen to introduce a new tool called
'avconv', and keep the traditional 'ffmpeg' frontend for end-user's
convenience. An <a href="index.html#fftools_rename"> earlier news
entry</a> compares how 'avconv' differs from 'ffmpeg'.
</p>

<p>
Additionally, this release introduces a number of new interesting codecs
such as the Apple ProRes, Flash Screen Video 2 and Windows Media Image,
and muxers such as LATM or CELT in Ogg, among many others. Moreover, our
H.264 decoder has been improved to decode 4:2:2 material and our libx264
wrapper now allows to produce 4:2:2 and 4:4:4 video.
</p>

<p>
The 0.8 branch will see maintenance and small feature updates in the
future, similar to previous release branches. Please request changes
such as bug fixes and new features
on <a href="http://bugzilla.libav.org">our bug tracker</a>.
</p>


<a name="2012_new_year_releases"></a><h3>Jan 11 2012</h3>

<p>
Since our last point release last month, three security issues have come
to our attention. All of them, along with the corresponding fixes,
originate from the Chromium Project, but apply to Libav as well. In
detail, they have been published as CVE-2011-3892, CVE-2011-3893, and
CVE-2011-3895. Therefore, we have updated all three stable branches with
the new releases <a href="download.html#release_0.7"> Libav
0.7.4</a>, <a href="download.html#release_0.6"> Libav 0.6.5</a>,
and <a href="download.html#release_0.5"> Libav 0.5.7</a>. As always, all
releases contain mostly security fixes only with the intention to not
introduce disturbing or interfering changes.
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>

<p>
Additionally, please use the opportunity to
give <a href="download.html#release_0.8">Libav 0.8_beta2</a> a
try. Compared to the first beta release, this snapshot has seen a number
of bug fixes. Note that since libpostproc has not been maintained for
quite a while, it is considered deprecated from now on and thus, no
longer built by default. In case your applications still require it,
you can re-enable the compilation of the post-processing library with
the <tt>--enable-postproc</tt> configure switch at this time, but the
library may disappear in a later release of Libav.
</p>


<a name="0.8_beta1"></a><h3>Dec 30 2011</h3>

<p>
As a step towards the next major <b>release 0.8</b>, we are asking for
feedback on our <a href="download.html#release_0.8">beta
release</a>. This gives you the opportunity to test and tell us your
opinion on what will be included in the next major release. Unlike our
last release, this release is a binary compatible drop-in replacement
for the 0.7 release series.
</p>

<a name="xmas_releases"></a><h3>December 25 2011</h3>

<p>
Just in time for Christmas, we have updated our three release
branches: <a href="download.html#release_0.7"> Libav
0.7.3</a>, <a href="download.html#release_0.6"> Libav 0.6.4</a>,
and <a href="download.html#release_0.5"> Libav 0.5.6</a>. All releases
contain mostly security fixes only with the intention to not introduce
disturbing or interfering changes. 0.6.4 contains in addition a number
of other carefully selected functional fixes from the 0.7 release
branch. As an extra bonus, the 0.7.3 release contains a backported API
avcodec_open2(). This allows newer versions of the external library
libx264 to work with Libav's libavcodec and libavformat libraries again.
</p>

<p>
In detail, all releases feature fixes for the VP3 decoder
(CVE-2011-4352), SVQ1 decoder (CVE-2011-4579), DoS in the VP5/VP6
decoders (CVE-2011-4353), the QDM2 decoder (CVE-2011-4351), and a buffer
overflow in the Sierra VMD decoder CVE-2011-4364. For a full list of
changes, please refer to the respective Changelog files.
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>

<a name="gci_2011"></a><h3>November 21 2011</h3>

<p>
Libav is participating in this year's
<a href="http://code.google.com/opensource/gci/2011-12/index.html">Google Code-in (GCI)</a>
under the umbrella of our friends from the <a href="http://videolan.org/">VideoLAN</a>
organization.
Google Code-in is the pre-university version of
<a href="http://code.google.com/soc">Google Summer of Code</a>,
where Libav has successfully participated in the last few years.
We are looking forward to mentoring pupils and introducing them
to free and open source software. Happy hacking!
</p>

<a name="release_0.6.3"></a><h3>Nov 05 2011</h3>

<p>
Today, we update two of our stable
branches: <a href="download.html#release_0.6"> Libav 0.6.3</a>,
and <a href="download.html#release_0.5"> Libav 0.5.5</a>. Both are
mostly security related updates, with the intention to not introduce
disturbing or interfering changes. This allows distributors and system
integrators to update their libraries at low risk of unexpected
problems.
</p>

<p>
For the <b>0.5.5</b> release, the following issues have been fixed:
</p>
<ul>
  <li>Fix memory (re)allocation in matroskadec.c (MSVR11-011/CVE-2011-3504)</li>
  <li>Fix some crashes with invalid bitstreams in the CAVS decoder
    (CVE-2011-3362, CVE-2011-3973, CVE-2011-3974)</li>
  <li>Compilation fixes for gcc-4.6, testsuite now passes again</li>
  <li>Detect and handle overreads in the MJPEG decoder.</li>
</ul>

<p>
For the <b>0.6.3</b> release, the following <b>additional</b> changes
have been done:
</p>
<ul>
  <li>Fix compilation with --enable-hardcoded-tables</li>
  <li>Fix races in default av_log handler (possibly exploitable)</li>
  <li>lavf: inspect more frames for fps when container time base is coarse</li>
  <li>AMV: disable DR1 and don't override EMU_EDGE (addresses http://seclists.org/bugtraq/2011/Apr/257)</li>
  <li>Fix a heap corruption issue in the OGG decoder</li>
  <li>Backported the Android VisualOn AAC encoder wrapper from 0.7.2</li>
</ul>

<p>
As always, distributors and system integrators are encouraged to update
and share their patches against our release branches.
</p>

<a name="release_0.7.2"></a><h3>Sept 30 2011</h3>

<p>
We have just released <a href="download.html#release_0.7"> Libav 0.7.2</a>,
the latest release from the 0.7 branch.
This is a security focused release that addresses the following issues:
</p>
<ul>
 <li>Check buffer and input values in various parts of the code:
    <ul>
     <li>H.264, VC-1, CAVS (OCERT-2011-002, CVE-2011-3362)</li>
     <li>APE, Indeo 2, XAN, WavPack, ffv1, Smacker</li>
     <li>RV10, RV30/RV40</li>
     <li>FLV, Ogg, MXF, MOV, Matroska (CVE-2011-3504)</li>
     <li>CPU detection</li>
    </ul>
 </li>
 <li>Remove memory leaks in vf_scale, eval</li>
 <li>Remove some suspicious illegal memcpy()s from LTP in AAC</li>
 <li>Fix Continuity Counter error detection in MPEG-TS</li>
 <li>Fix crashes in ppc32 PIC builds
     (as reported in <a href="http://bugs.debian.org/639948">Debian</a>)</li>
 <li>Fix cast related random failures in ppc64</li>
 <li>Fix context pointer in av_open_input_stream when avformat_open_input fails</li>
</ul>

<p>
Additional bug fixes and improvements in the build system, H.264 and VP3/Theora decoder,
ARM support and audio codecs are present. A detailed list of changes can be seen in
the git log:
<a href="http://git.libav.org/?p=libav.git;a=shortlog;h=refs/heads/release/0.7">
http://git.libav.org/?p=libav.git;a=shortlog;h=refs/heads/release/0.7</a>
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>


<a name="avconv_stable"></a><h3>September 27 2011</h3>

<p>
<b>avconv</b> is now declared stable. Any incompatible syntax changes
from now on will be preceded by a deprecation period, when both old and
new syntax will work.
</p>

<a name="fftools_rename"></a><h3>August 09 2011</h3>

<p>
<b>Updated on 12.09.2011.</b>
</p>

<p>
For consistency with our new name we have renamed <b>ffplay</b> to
<b>avplay</b>, <b>ffserver</b> to <b>avserver</b> and <b>ffprobe</b> to
<b>avprobe</b>. Their behavior is the same, just the names were changed.
</p>

<p>
With <b>ffmpeg</b> (the command line tool) we decided to use this opportunity to
fix some longstanding usability problems, which involves breaking compatibility.
Therefore we have added a new tool named <b>avconv</b> which is based on
<b>ffmpeg</b>, but has a different (hopefully more powerful and easier to use)
syntax for some options.
<b>ffmpeg</b> will be kept in its current state for some time, so no scripts or
frontends using it will break. However it will not be developed further.
</p>

<p>
Differences between <b>avconv</b> and <b>ffmpeg</b> are:
</p>
<ul>
    <li>The options placement is now strictly enforced! While in theory the
    options for <b>ffmpeg</b> should be given in <i>[input options] -i INPUT
    [output options] OUTPUT</i> order, in practice it was possible to give
    output options before the <i>-i</i> and it mostly worked. Except when it
    didn't - the behavior was a bit inconsistent.
    In <b>avconv</b>, it is not possible to mix input and output options. All
    non-global options are reset after an input or output filename.</li>
    <li>All per-file options are now truly per-file - they apply only to the
    next input or output file and specifying different values for different
    files will now work properly (notably <i>-ss</i> and <i>-t</i> options).</li>
    <li>All per-stream options are now truly per-stream - it is possible to
    specify which stream(s) should a given option apply to. See the
    <i>Stream specifiers</i> section in the <b>avconv</b> manual for details.</li>
    <li>In <b>ffmpeg</b> some options (like <i>-newvideo/-newaudio/...</i>) are
    irregular in the sense that they're specified <i>after</i> the output
    filename instead of before, like all other options. In <b>avconv</b> this
    irregularity is removed, all options apply to the next input or output
    file.</li>
    <li><i>-newvideo/-newaudio/-newsubtitle</i> options were removed. Not only
    were they irregular and highly confusing, they were also redundant. In
    <b>avconv</b> the <i>-map</i> option will create new streams in the output
    file and map input streams to them. E.g. <i>avconv -i INPUT -map 0
    OUTPUT</i> will create an output stream for each stream in the first input
    file.</li>
    <li>The <i>-map</i> option now has slightly different and more powerful
    syntax:
    <ul>
        <li> Colons (':') are used to separate file index/stream type/stream
        index instead of dots. Comma (',') is used to separate the sync stream
        instead of colon.. This is done for consistency with other options.</li>
        <li> It's possible to specify stream type. E.g. <i>-map 0:a:2</i>
        creates an output stream from the third input audio stream.</li>
        <li> Omitting the stream index now maps all the streams of the given
        type, not just the first. E.g. <i>-map 0:s</i> creates output streams
        for all the subtitle streams in the first input file.</li>
        <li> Since -map can now match multiple streams, negative mappings were
        introduced. Negative mappings disable some streams from an already
        defined map. E.g. '-map 0 -map -0:a:1' means 'create output streams for
        all the stream in the first input file, except for the second audio
        stream'.</li>
    </ul>
    </li>
    <li> There is a new option <i>-c</i> (or <i>-codec</i>) for choosing the
    decoder/encoder to use, which allows to precisely specify target stream(s)
    consistently with other options. E.g. <i>-c:v lib264</i> sets the codec for all
    video streams, <i>-c:a:0 libvorbis</i> sets the codec for the first audio stream
    and <i>-c copy</i> copies all the streams without reencoding.
    Old <i>-vcodec/-acodec/-scodec</i> options are now aliases to <i>-c:v/a/s</i></li>
    <li> It is now possible to precisely specify which stream should an AVOption
    apply to. E.g. <i>-b:v:0 2M</i> sets the bitrate for the first video stream,
    while <i>-b:a 128k</i> sets the bitrate for all audio streams. Note that the
    old <i>-ab 128k</i> syntax is deprecated and will stop working soon.</li>
    <li> <i>-map_chapters</i> now takes only an input file index and applies to
    the next output file. This is consistent with how all the other options
    work.</li>
    <li> <i>-map_metadata</i> now takes only an input metadata specifier and
    applies to the next output file. Output metadata specifier is now part of
    the option name, similarly to the AVOptions/map/codec feature above.</li>
    <li> <i>-metadata</i> can now be used to set metadata on streams and
    chapters, e.g. <i>-metadata:s:1 language=eng</i> sets the language of the
    first stream to 'eng'.
    This made <i>-vlang/-alang/-slang</i> options redundant, so they were
    removed.</li>
    <li> Presets in <b>avconv</b> are disabled, because only libx264 used them
    and presets for libx264 can now be specified using a private option <i>-preset
    presetname</i>.</li>
    <li> <i>-qscale</i> option now uses stream specifiers and applies to all
    streams, not just video. I.e. plain <i>-qscale number</i> would now apply
    to all streams. To get the old behavior, use <i>-qscale:v</i>.
    Also there is now a shortcut <i>-q</i> for <i>-qscale</i> and <i>-aq</i> is
    now an alias for <i>-q:a</i>.</li>
    <li> <i>-vbsf/-absf/-sbsf</i> options were removed and replaced by a
    <i>-bsf</i> option which uses stream specifiers. Use <i>-bsf:v/a/s</i>
    instead of the old options.</li>
    <li> <i>-itsscale</i> option now uses stream specifiers, so its argument is
    only the scale parameter.</li>
    <li> <i>-intra</i> option was removed, use <i>-g 0</i> for the same
    effect.</li>
    <li> <i>-psnr</i> option was removed, use <i>-flags +psnr</i> for the same
    effect.</li>
    <li> <i>-vf</i> option is now an alias to the new <i>-filter</i> option,
    which uses stream specifiers.</li>
    <li> <i>-vframes/-aframes/-dframes</i> options are now aliases to the new
    <i>-frames</i> option.</li>
    <li> <i>-vtag/-atag/-stag</i> options are now aliases to the new <i>-tag</i>
    option.</li>
</ul>

<p>
Note that the <b>avconv</b> interface is not considered stable yet. More
incompatible changes may come in the following weeks. We will announce here when
<b>avconv</b> is stable.
</p>

<a name="release_0.7.1"></a><h3>July 21 2011</h3>

<p>
We have just released <a href="download.html#release_0.7"> Libav 0.7.1</a>,
the latest release from the 0.7 branch.
This is a maintenance-only release that addresses the following issues:
</p>
<ul>
 <li>added various additional FourCC codec identifiers</li>
 <li>H.264 4:4:4 fixes</li>
 <li>build system and compilation fixes</li>
 <li>Doxygen and general documentation corrections and improvements</li>
 <li>fixed segfault in ffprobe</li>
 <li>behavioral fix in av_open_input_stream()</li>
 <li>Licensing clarification for LGPL'ed vf_gradfun</li>
 <li>bug fixes while seeking in multithreaded decoding</li>
 <li>support newer versions of OpenCV</li>
 <li>ffmpeg: fix operation with --disable-avfilter</li>
 <li>fixed integer underflow in Matroska decoder</li>
</ul>

<p>
A detailed list of changes can be seen in the git log:
<a href="http://git.libav.org/?p=libav.git;a=shortlog;h=refs/heads/release/0.7">
http://git.libav.org/?p=libav.git;a=shortlog;h=refs/heads/release/0.7</a>
</p>

<p>
Distributors and system integrators are encouraged to update and share
their patches against our release branches.
</p>


<a name="release_0.7"></a><h3>June 20 2011</h3>

<p>
Long overdue but finally finished, we are happy to announce the first
release from the <a href="download.html#release_0.7">Libav 0.7</a>
release branch. Since the last beta version, we have taken feedback
from our users into account and integrated H.264/MPEG frame-level
multithreading.
</p>

<p>
The 0.7 branch will see maintenance and small feature updates in the future,
similar to previous release branches. Please request changes such as bug fixes
and new features on <a href="http://bugzilla.libav.org">our new bug tracker</a>.
</p>

<p>
This release enables frame-based multithreaded decoding for a number of codecs,
including VP8, H.263 and H.264. Additionally, there has been a major cleanup of
both internal and external APIs. For this reason, the major versions of all
libraries have been bumped. On the one hand, this means that 0.7 can be installed
side-by-side with previous releases, on the other hand, in order to benefit
from the new features, applications need to be recompiled.
</p>

<p>
Other important changes are additions of decoders including, but not limited to,
AMR-WB, single stream LATM/LOAS, G.722 ADPCM, a native VP8 decoder
and HE-AACv2. Additionally, many new de/muxers such as WebM in Matroska, Apple
HTTP Live Streaming, SAP, IEC 61937 (S/PDIF) have been added.
See the Changelog file for a list of significant changes.
</p>

<a name="0.7_beta2"></a><h3>May 12 2011</h3>

<p>
We are happy to announce our latest beta
release <a href="download.html#release_0.7">Libav 0.7 beta2</a>. Since
the last beta version, we've integrated 9bit and 10bit per sample
support in the H.264 decoder, AVX optimizations (available on, for
example, Sandy Bridge processors), an DPX image encoder, and SMPTE AES3
audio decoding. Moreover, we have finished cleaning up the API from
unnecessary compatibility cruft for the upcoming 0.7 release.

In other words, with this beta release the tree is officially declared
stable again.
</p>

<a name="0.7_beta1"></a><h3>Apr 19 2011</h3>

<p>
We are still on track with doing the next major <b>release 0.7</b>. As a
number of dependent projects have asked for faster releases, we now
provide our users with blessed snapshots of the current state of
development in Libav in form of
the <a href="download.html#release_0.7">Libav 0.7 beta1
release</a>. This gives you the opportunity to test and write us your
opinion on what will be included in the next major release. Please note
that major versions (and thus the SONAME) of all libraries have just
been bumped which allows co-installation with 0.6.
</p>

<a name="big_bump"></a><h3>Apr 18 2011</h3>

<p>
In preparation for the upcoming 0.7 release, major versions of all the libraries
in Libav (libavcodec, libavformat, libavdevice, libavutil, libavfilter,
libswscale and libpostproc) were just bumped. This means that some deprecated
code was disabled and will be removed shortly, thus breaking binary and API
compatibility with
0.6.
</p>

<p>
The tree is hereby declared unstable for a short time so we can finish all the
incompatible changes.
</p>

<a name="avio_changes"></a><h3>Apr 13 2011</h3>

<p>
In the past few months, we did a large-scale cleanup of the formerly
semi-public IO API in libavformat. As a result:
</p>
<ul>
    <li>The higher-level buffered API working with ByteIOContext (now
    renamed to AVIOContext) is now officially public.</li>
    <li>Some functions from the buffered API were found unfit to be
    public and were deprecated.</li>
    <li>The lower-level unbuffered API working with URLContext was found
    unfit to be public and is now deprecated. If you are using it to feed
    libavformat demuxers with your own I/O system, you can easily switch
    to the buffered API.</li>
    <li>All public functions now conform to the Libav naming rules and
    are properly prefixed with <i>avio_</i>, thus preventing name clashes.</li>
</ul>

<p>
If you are using the ByteIOContext API in your application, adapting to
the changes should be straightforward and consist mostly of renames.
</p>

<p>
We will maintain compatibility for the 0.7 release, everything
deprecated now is planned to be removed shortly before 0.8. If you
cannot find an adequate replacement for a deprecated part of the API you
are using or have any problems while switching to the buffered API, please
<a href="contact.html">contact us</a> and we will try to
solve your problem. Refer to the <i>doc/APIChanges</i> file for details.
</p>


<a name="distros_move_to_libav"></a><h3>Mar 25, 2011</h3>

<p>
We are pleased to announce that only weeks after its inception, Libav
has already been integrated into major Linux distributions such
as <a href="https://launchpad.net/ubuntu/+source/libav">Ubuntu</a>,
<a href="http://packages.gentoo.org/package/media-video/libav">
Gentoo</a>, <a href="http://packages.qa.debian.org/liba/libav.html">Debian</a> and
<a href="http://cgit.openembedded.org/openembedded/tree/recipes/libav">OpenEmbedded</a>.
We encourage other distros to review our <a href="about.html">mission
statement</a> and consider including Libav as system libraries as well.
</p>

<a name="release_0.6.2"></a><h3>Mar 18, 2011</h3>

<p>
We have just pushed another point release from our 0.6 release branch:
<a href="download.html#release_0.6">Libav 0.6.2</a>. This is another
maintenance-only release addressing two security issues.
</p>

<p>
From now on, we will be using our new project name <b>libav</b>. But
don't worry, compared to the preceding release 0.6.1, the only
functional changes are the two security fixes for the VC1 and APE
decoders. This means that libav provides a painless drop-in replacement
for existing FFmpeg installations.
</p>

<p>
Moreover, we are proud to accompany this source release with executables
and libraries for the <a href="http://win32.libav.org">win32
platform</a>. These binaries include H.264 encoding using the bundled
x264 library. Enjoy!
</p>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>


<a name="release_0.5.4"></a><h3>Mar 17, 2011</h3>

<p>
We have just pushed another point release from our 0.5 release branch:
<a href="download.html#release_0.5">FFmpeg 0.5.4</a>. This is another
maintenance-only release that addresses a number of security issues.
</p>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>


<a name="move_to_libav_org"></a><h3>March 13, 2011</h3>

<p>
We, as a group of FFmpeg developers, have decided to continue developing
FFmpeg under the name Libav. All existing infrastructure will be
transferred to the libav.org domain.
</p>

<table border="0" cellpadding="0" cellspacing="0"><tr>
<td style="text-align: left;">Website:&nbsp;</td>
<td style="text-align: left;"><a href="http://www.libav.org/">http://www.libav.org/</a></td></tr><tr>
<td style="text-align: left;">Git:&nbsp;</td>
<td style="text-align: left;"><a href="git://git.libav.org/libav.git">git://git.libav.org/libav.git</a> (see <a href="http://www.libav.org/download.html">http://libav.org/download.html</a>)</td></tr><tr>
<td style="text-align: left;">FATE:&nbsp;</td>
<td style="text-align: left;"><a href="http://fate.libav.org/">http://fate.libav.org/</a></td></tr><tr>
<td style="text-align: left;">Roundup:&nbsp;</td>
<td style="text-align: left;"><a href="https://roundup.libav.org/">https://roundup.libav.org/</a></td></tr><tr>
<td style="text-align: left;">Patchwork:&nbsp;</td>
<td style="text-align: left;"><a href="http://patches.libav.org/">http://patches.libav.org/</a></td></tr><tr>
<td style="text-align: left;">Mailinglists:&nbsp;</td>
<td style="text-align: left;"><a href="http://lists.libav.org/">http://lists.libav.org/</a> (developer list: <a href="mailto:libav-devel@libav.org">libav-devel@libav.org</a>)</td></tr>
</table>

<p>
You can update your git repository using the following command:
</p>
<pre>git remote set-url origin 'git://git.libav.org/libav'</pre>

<p>
For now we are still reachable over FFmpeg's mailing lists and IRC channels
but we will migrate to libav.org counterparts. For a transition period both
the website and source might still contain references to FFmpeg. These will
disappear over time, except where historically relevant.
</p>

<a name="svn_to_git"></a><h3>February 24, 2011</h3>

<p>
FFmpeg development has moved to Git, and the SVN repository is no longer
updated. The SVN repository may be removed in a near future, so you're
recommended to use a <a href="/download.html">Git repository</a> instead.
</p>

<p>
The last revision committed to SVN was r26402 on 2011-01-19 and replaced
the svn:external libswscale with a standalone copy.
</p>

<a name="release_0.6.1"></a><h3>Oct 18, 2010</h3>

<p>
We have just pushed the first point release from our 0.6 release branch:
<a href="download.html#release_0.6">FFmpeg 0.6.1</a>. This is a
maintenance-only release that addresses a small number of bugs and security
issues. It also adds a newer version of the AAC decoder, which enables the
playback of HE-AAC v2 media.
</p>

<p>
We have also taken the time make another point release our 0.5 branch:
<a href="download.html#release_0.5">FFmpeg 0.5.3</a>.
It is a maintenance-only release that addresses a security issue and a
minor set of bugs.
</p>

<p>
Distributors and system integrators are encouraged to update and share their
patches against our release branches.
</p>


<a name="release_0.6"></a><h3>June 15, 2010</h3>

<p>
A bit longer than actually expected, but finally, we are proud to announce
a <b>new release: <a href="download.html#release_0.6">FFmpeg 0.6</a></b>. Check out
the <a href="releases/old/ffmpeg-0.6.release">release notes</a> and
<a href="releases/old/ffmpeg-0.6.changelog">changelog</a>.
</p>

<p>
It is codenamed "Works with HTML5" as the special focus of this release were
improvements for the new multimedia elements in HTML5. The H.264 and Theora
decoders are now significantly faster and the Vorbis decoder has seen important
updates. This release supports Google's newly released libvpx library for the
VP8 codec and the Matroska demuxer was extended to support the WebM container.
</p>

<p>
This release includes again an extensive number of changes; some of its
highlights are:
</p>
<ul>
<li>Significant work to support at least decoding of all widespread mainstream
proprietary codecs, and as usual broad coverage of widespread non-proprietary
codecs, such as:
    <ul>
    <li>decoders and encoders
        <ul>
        <li>VP8 (via Google's libvpx library)</li>
        </ul>
    </li>
    <li>decoders
        <ul>
        <li>AMR-NB</li>
        <li>Atrac1</li>
        <li>HE-AAC v1</li>
        <li>Bink</li>
        <li>Blu-ray (PGS) subtitle</li>
        <li>MPEG-4 Audio Lossless Coding (ALS)</li>
        <li>WMA Pro</li>
        <li>WMA Voice</li>
        </ul>
    </li>
    </ul>
</li>

<li>Highlights among the newly supported container formats:
    <ul>
    <li>demuxers and muxers
        <ul>
        <li>Adobe Filmstrip</li>
        <li>SoX native format</li>
        <li>WebM support in Matroska de/muxer</li>
        </ul>
    </li>
    <li>demuxers
        <ul>
        <li>Bink</li>
        <li>Core Audio Format</li>
        <li>Dirac in Ogg</li>
        <li>IV8</li>
        <li>QCP</li>
        <li>VQF</li>
        <li>Wave64</li>
        </ul>
    </li>
    <li>muxers
        <ul>
        <li>IEC-61937</li>
        <li>RTSP</li>
        </ul>
    </li>
    </ul>
</li>

<li>faster AAC decoding</li>
<li>faster H.264 decoding</li>
<li>numerous ARM optimizations</li>
<li>important updates to the Vorbis decoder</li>
<li>RTP packetization support for H.263, and AMR</li>
<li>RTP depacketization support for AMR, ASF, H.263, Theora and Vorbis</li>
<li>RTMP/RTMPT/RTMPS/RTMPE/RTMPTE protocol support via librtmp</li>
<li>the new ffprobe tool</li>
<li>VorbisComment writing for FLAC, Ogg FLAC and Ogg Speex files</li>
<li>and so much more!</li>
</ul>


<a name="linuxtag_2010"></a><h3>June 2, 2010</h3>
<p>
We are pleased to announce that FFmpeg will be present at LinuxTag in
Berlin June 9-12 where we will be showing some spectacular demos.
There will also be some trolls.
</p>

<a name="release_0.5.2"></a><h3>May 25, 2010</h3>
<p>
We have just pushed out another point release from our 0.5 release branch:
<a href="download.html#release_0.5">FFmpeg 0.5.2</a>.
This is a maintenance-only release that addresses a small number of security
and portability issues. Distributors and system integrators are encouraged
to update and share their patches against this branch.
</p>

<a name="gsoc_2010"></a><h3>March 19, 2010</h3>
<p>
Once again, FFmpeg has been accepted to take part in the
<a href="http://code.google.com/soc/">Google Summer of Code</a>. Here is the
<a href="http://socghop.appspot.com/org/show/google/gsoc2010/ffmpeg">Google SoC
FFmpeg page</a>.
</p>
<p>
We have a list of
<a href="http://wiki.multimedia.cx/index.php?title=FFmpeg_Summer_Of_Code_2010">
proposed project ideas</a> available so, if you think you might be interested,
head over there to see if there is any project on which you wish to work and for
which you may wish to make an application. The list is still in flux, and you're
free to come up with your own ideas, but note that proposals should be closely
tied to the progression of FFmpeg's code base.
</p>
<p>
We would like prospective students to show us that they've got what it takes
to be a contributor to FFmpeg. If you think you're suited, then please complete
a <a href="http://wiki.multimedia.cx/index.php?title=Small_FFmpeg_Tasks">small
task</a> before submitting your Summer-of-Code proposal. Note that many of the
proposed Summer-of-Code projects have specific tasks that you would want to work
on, since they would show us that you're comfortable in that particular piece of
our codebase that relates to your specific project. Send patches to the mailing
list for review, so that you will learn about our patch review process,
<a href="http://en.wikipedia.org/wiki/Posting_style#Inline_replying">inline
replying</a> (because we don't like top-posting on our mailing lists) and general
interactions with our developer base.
</p>
<p>
The sooner you start communicating with us and working within
our code base, the sooner both you and we will ascertain your suitability and
you will get used to our development methodology. You have until the application
deadline to complete your small task. Good luck!
</p>

<a name="release_0.5.1"></a><h3>March 2, 2010</h3>
<p>
We have just pushed out a point release from our 0.5 release
branch: <a href="download.html#release_0.5">FFmpeg 0.5.1</a>. This
release fixes security, packaging and licensing issues for FFmpeg 0.5,
but it is a maintenance only release; no new codecs, formats or other
feature are being introduced. The full details are spelled out in the
the <a href="releases/old/ffmpeg-0.5.1.release">release notes</a>
and <a href="releases/old/ffmpeg-0.5.1.changelog">changelog</a>.
</p>

<p>
There have been security fixes for the ASF, Ogg and MOV/MP4 demuxers
as well as the FFv1, H.264, HuffYUV, MLP, MPEG audio and Snow
decoders. libswscale can now be compiled in LGPL mode, albeit with
x86 optimizations disabled. Some non-free bits in a test program were
replaced. The AC-3 decoder is now completely LGPL. AMR-NB/WB support
is now possible in free software through the OpenCORE libraries.
</p>

<p>
To help packagers, the x264 glue code was updated to work with newer
versions and symbol versioning was backported, as was the lock
management API. The symbol versioning change is enabled on platforms
that support it. This allows users to upgrade from 0.5.1 to the
upcoming 0.6 release without having to recompile their applications.
While this release is both API and ABI compatible with 0.5, please
note that distributors have to recompile applications against 0.5.1
in order to make seamless upgrades to 0.6 possible.
</p>


<h3>March 1, 2010</h3>
<p>
We have been busy over the past few months. Among other things, the
results are an Indeo 5 video decoder as well as audio decoders for
AMR-NB, Sipro, MPEG-4 ALS and WMA Voice, complete support for Bink,
CDG and IFF PBM/ILBM bitmaps, an RTSP muxer, Blu-ray (PGS) subtitle
support, a protocol for file concatenation and the ffprobe tool for
extracting information from multimedia files.
</p>

<h3>September 23, 2009</h3>
<p>
In 1992 Sony introduced the first Minidisc player. 17 years later it is now
possible to transfer and play back the raw ATRAC data from the actual digital
disc with the help of FFmpeg, tools developed by the
<a href="https://wiki.physik.fu-berlin.de/linux-minidisc/doku.php">Linux
 Minidisc project</a> and official hardware (MZ-RH1). So if you have lots of digital
recordings stored on Minidisc now is the time to archive it all.
</p>

<p>
One of the last entrenchments of proprietary multimedia has fallen: Windows Media
Audio Pro support is finally available in FFmpeg. It decodes all known samples
flawlessly and is considerably faster than the binary decoder from Microsoft.
A big thank you goes out to all the reverse engineers and programmers who made
this possible. It really was a herculean effort.
</p>


<h3>August 24, 2009</h3>
<p>
Just a very short time after its launch (~10 years), FFmpeg now supports
decoding of TwinVQ (remember .vqf files?). Now FOSS enthusiasts can finally
contribute to the late 90's discussion if it sounds better than MP3 or not.
</p>

<h3>July 24, 2009</h3>
<p>
FFmpeg has removed support for
<a href="http://www.penguin.cz/~utx/amr">libamr</a> as of svn revision 19365. It
has been replaced with support for
<a href="http://opencore-amr.sourceforge.net/">libopencore-amr</a>. Naturally
the configure options have changed. The libamr options have been removed and
there are two new options to take their place:
</p>
<ul>
<li>--enable-libopencore-amrnb</li>
<li>--enable-libopencore-amrwb</li>
</ul>
<p>
The reason for this change is that the libamr license was non-free, while
libopencore-amr is licensed under an Apache 2 license. The change was
<a href="http://lists.libav.org/pipermail/ffmpeg-devel/2009-May/069779.html">
discussed at length</a> on the developer mailing list during May, June, and
July. This has several effects:
</p>
<ul>
<li>You may now distribute FFmpeg builds with support for dynamically loading
    libopencore-amr</li>
<li>Support for AMR-WB encoding has been removed since libopencore-amr does not
    support it</li>
</ul>

<h3>May 7, 2009</h3>
<p>
FFmpeg was granted 9 slots to fill with applicants. After the gruelling
application and qualification process, we will be running the following tasks
this year:
</p>
<ul>
<li>RTMP Support
    <ul>
    <li>Student: Kostya Shiskov</li>
    <li>Mentor: Ronald Bultje</li>
    </ul>
</li>
<li>Libswscale Cleanup
    <ul>
    <li>Student: Ramiro Polla</li>
    <li>Mentor: Reimar Döffinger</li>
    </ul>
</li>
<li>S/PDIF Multiplexer
    <ul>
    <li>Student: Bartlomiej Wolowiec</li>
    <li>Mentor: Benjamin Larsson</li>
    </ul>
</li>
<li>Playlist/Concatenation Support
    <ul>
    <li>Student: Geza Kovacs</li>
    <li>Mentor: Baptiste Coudurier</li>
    </ul>
</li>
<li>JPEG2000 Codec
    <ul>
    <li>Student: Jai Menon</li>
    <li>Mentor: Justin Ruggles</li>
    </ul>
</li>
<li>Implement the New Seeking API in Libavformat
    <ul>
    <li>Student: Zhentan Feng</li>
    <li>Mentor: Baptiste Coudurier</li>
    </ul>
</li>
<li>MPEG-4 ALS Decoder
    <ul>
    <li>Student: Thilo Borgmann</li>
    <li>Mentor: Justin Ruggles</li>
    </ul>
</li>
<li>Implementation of AVFilter infrastructure and various audio filters
    <ul>
    <li>Student: Kevin Dubois</li>
    <li>Mentor: Vitor Sessak</li>
    </ul>
</li>
<li>Finish AMR-NB decoder and write an encoder
    <ul>
    <li>Student: Colin McQuillan</li>
    <li>Mentor: Robert Swain</li>
    </ul>
</li>
</ul>
<p>Congratulations to all the successful applicants. Work hard, communicate well
and prosper! Good luck!</p>

<h3>March 26, 2009</h3>
<p>
Once again, FFmpeg has been accepted to take part in the
<a href="http://code.google.com/soc/">Google Summer of Code</a>. Here is the
<a href="http://socghop.appspot.com/org/show/google/gsoc2009/ffmpeg"> Google SoC
FFmpeg page</a>.
</p>
<p>
We have a list of
<a href="http://wiki.multimedia.cx/index.php?title=FFmpeg_Summer_Of_Code_2009">
proposed project ideas</a> available so, if you think you might be interested,
head over there to see if there is any project on which you wish to work and for
which you may wish to make an application. The list is still in flux, and you're
free to come up with your own ideas, but note that proposals should be closely
tied to the progression of FFmpeg's code base.
</p>
<p>
If you're a student who thinks you have what it takes, we require that
prospective students complete some degree of
<a href="http://wiki.multimedia.cx/index.php?title=Small_FFmpeg_Tasks">small
task</a> before they will be considered to take part in the program for FFmpeg.
Take a look at the list, pick something to do, learn about
<a href="http://en.wikipedia.org/wiki/Posting_style#Inline_replying">inline
replying</a> because we don't like top-posting on our mailing lists and then
tell us on the <a href="contact.html">FFmpeg-devel</a> mailing list your small
task of choice.
</p>
<p>
The sooner you start communicating with us and working within
our code base, the sooner both you and we will ascertain your suitability and
you will get used to our development methodology. You have until the application
deadline to complete your small task. Good luck!
</p>

<h3>March 23, 2009</h3>
<p>
A new mailing list has been created for ffserver users. The list is intended to
create an environment for discussion amongst ffserver users so that they can
better receive support and support each other. Interested parties can subscribe
and view the archives via the <a href="contact.html">contact page</a>.
</p>

<a name="release_0.5"></a><h3>March 10, 2009</h3>
<p>
It has been a very long time since we last made a release and many did not think
we would make one again but, back by popular demand, we are proud to announce
a <b>new release: <a href="download.html#release_0.5">FFmpeg 0.5</a></b>. Check out
the <a href="releases/old/ffmpeg-0.5.release">release notes</a> and
<a href="releases/old/ffmpeg-0.5.changelog">changelog</a>.
</p>

<p>
It is codenamed "half-way to world domination A.K.A. the belligerent blue bike
shed" to give an idea where we stand in the grand scheme of things and to
commemorate the many fruitful discussions we had during its development.
</p>

<p>
This release includes a <b>very</b> extensive number of changes, but some of the
highlights are:
</p>
<ul>
<li>Significant work to support at least decoding of all widespread mainstream
proprietary codecs, such as:
    <ul>
    <li>decoders and encoders
        <ul>
        <li>ALAC</li>
        <li>Flash Screen Video</li>
        <li>WMAv2 decoder fixed, WMAv1/v2 encoder</li>
        </ul>
    </li>
    <li>decoders
        <ul>
        <li>Atrac3</li>
        <li>MLP/TrueHD</li>
        <li>On2 VP3 improvements and VP5/VP6 support</li>
        <li>RealAudio Cooker and fixes for 14.4 and 28.8</li>
        <li>RealVideo RV30/40</li>
        <li>WMV3/WMV9/VC-1 and IntraX8 frame support for WMV2/VC-1</li>
        </ul>
    </li>
    </ul>
</li>

<li>Broad coverage of widespread non-proprietary codecs, including:
    <ul>
    <li>decoders and encoders
        <ul>
        <li>DNxHD</li>
        <li>DVCPRO50 (a.k.a. DV50)</li>
        <li>Floating point PCM</li>
        <li>GSM-MS</li>
        <li>Theora (and encoding via libtheora)</li>
        <li>Vorbis</li>
        </ul>
    </li>
    <li>decoders
        <ul>
        <li>AAC with ADTS support and &gt;2x the speed of FAAD! (no HE AAC
            support yet)</li>
        <li>AC-3 that is faster than liba52 in 5.1, up to 2x faster in stereo
            and also supports E-AC-3! Hence liba52 is now obsolete.</li>
        <li>DCA</li>
        <li>DVCPRO HD (a.k.a. DV100)</li>
        <li>H.264 PAFF and CQM support, plus slice-based multithreaded decoding
        </li>
        <li>Monkey's Audio</li>
        <li>MPEG-2 video support for intra VLC and 4:2:2</li>
        <li>Musepack</li>
        <li>QCELP</li>
        <li>Shorten</li>
        <li>True Audio (TTA)</li>
        <li>WavPack including hybrid mode support</li>
        </ul>
    </li>
    </ul>
</li>

<li>Highlights among the newly supported container formats:
    <ul>
    <li>demuxers and muxers
        <ul>
        <li>GXF</li>
        <li>MXF</li>
        </ul>
    </li>
    <li>demuxers
        <ul>
        <li>NullSoft Video (NSV)</li>
        </ul>
    </li>
    <li>muxers
        <ul>
        <li>iPhone/iPod compatibility for MP4/MOV</li>
        <li>Matroska</li>
        <li>NUT</li>
        <li>Ogg (FLAC, Theora and Vorbis only)</li>
        <li>ShockWave Flash (SWF)</li>
        </ul>
    </li>
    </ul>
</li>

<li>libavdevice</li>
<li>ffserver is working again.</li>
<li>a shiny, new, completely revamped, non-recursive build system</li>
<li>cleaner, more consistent code</li>
<li>an all new metadata API</li>
<li>and so much more!</li>
</ul>

<h3>March 4, 2009</h3>
<p>
Google are again running their <a href="http://code.google.com/soc/">Summer of
Code</a> program and, as usual, we will be applying for a project position. As
such we will need strong
<a href="http://wiki.multimedia.cx/index.php?title=FFmpeg_Summer_Of_Code_2009">
project proposals</a> and qualification tasks for the students to complete.
</p>
<p>
To all the students out there who want to work on FFmpeg over the summer, the
sooner you begin to contribute to the project the better. Working on digital
multimedia software is not the easiest task and getting code into FFmpeg's trunk
repository demands significant rigor and commitment.
</p>
<p>
Until we are officially accepted into the program, you could take a look at the
list of
<a href="http://wiki.multimedia.cx/index.php?title=Small_FFmpeg_Tasks">small
tasks</a> we have and try to complete one of those. Support for development of
FFmpeg is available via <a href="contact.html">the FFmpeg-devel mailing list or
IRC</a>.
</p>

<h3>December 20, 2008</h3>
<p>
RealVideo 3.0 decoder added.
Still working the bugs out, please test and report any problems.
</p>

<h3>December 20, 2008</h3>
<p>
The FFmpeg project would like to recognize
and thank the people at <a href="http://www.picsearch.com/">Picsearch</a>
for their help improving FFmpeg recently. The Picsearch team makes extensive
use of FFmpeg and provided feedback to FFmpeg in the form of thousands of files
that either crash FFmpeg or use unsupported/unknown codecs. The FFmpeg
development team is putting this information to work in order to improve
FFmpeg for everyone.
</p>

<p>
We know that there are other organizations using FFmpeg on a large scale
to process diverse input types. The FFmpeg team invites those
organizations to provide similar feedback about problems encountered in
the wild.
</p>

<h3>December 3, 2008</h3>
<p>
A bunch of new formats have recently been
added to FFmpeg, namely a QCELP/PureVoice speech decoder, a floating point
PCM decoder and encoder, a Nellymoser ASAO encoder, an Electronic Arts TGQ
decoder, Speex decoding via libspeex, an MXF muxer, an ASS/SSA subtitle demuxer
and muxer and our AC-3 decoder has been extended with E-AC-3 support. Last but
not least we now have a decoder for RealVideo 4.0.
</p>

<h3>September 8, 2008</h3>
<p>
FFmpeg is undergoing major changes in its
API/ABI. The last valid revision for libavcodec version 51 is r15261.
</p>

<h3>August 21, 2008</h3>
<p>
The AAC decoder from FFmpeg Summer of Code
2006 has finally been cleaned up and is now in FFmpeg trunk. It supports Main
and Low Complexity profile AAC but does not yet support HE AAC v1 (LC + SBR) or
v2 (LC + SBR + PS), though implementation of this support is underway. It is
considerably faster than FAAD and you should expect further performance
improvements and bug fixes in the coming weeks.
</p>

<p>
Also, FFmpeg now has floating point PCM support and supports MLP/TrueHD decoding
(FFmpeg SoC 2008 should bring us an encoder), Apple Lossless Audio encoding
(FFmpeg SoC 2008) MVI demuxing and Motion Pixels Video decoding, D-Cinema audio
muxing, Electronic Arts CMV and TGV decoding and MAXIS EA XA demuxing/decoding.
</p>

<h3>June 16, 2008</h3>
<p>
UAB "DKD" (dkd.lt) have released a Nellymoser
ASAO compatible <a href="http://samples.libav.org/A-codecs/Nelly_Moser/ASAO/ASAO.zip">decoder and
encoder</a> under the LGPL. This will aid the development of a native encoder in
FFmpeg, and right now a GSoC student is working hard on just that task. A great
thanks to UAB "DKD" for this contribution to the FFmpeg community.
</p>

<h3>June 11, 2008</h3>
<p>
We have added an Oma demuxer, the QuickTime
variant of an IMA ADPCM encoder, a VFW grabber, an iPod/iPhone-compatible MP4
muxer, a Mimic decoder, an MSN TCP Webcam stream demuxer as well as demuxers
and decoders for the following fringe formats: RL2, IFF, 8SVX, BFI.
</p>

<h3>February 7, 2008</h3>
<p>
We have added Ogg and AVM2 (Flash 9)
SWF muxers, TechnoTrend PVA and Linux Media Labs MPEG-4 (LMLM4) demuxers,
PC Paintbrush PCX and Sun Rasterfile decoders.
</p>

<h3>November 11, 2007</h3>
<p>
FFmpeg now supports XIntra8 frames,
meaning that finally all WMV2 samples and some WMV3 samples that showed
blocky color artifacts can be decoded correctly.
</p>

<h3>October 22, 2007</h3>
<p>
Beam Software SIFF demuxer and video decoder
support added.
</p>

<h3>October 15, 2007</h3>
<p>
FFmpeg gets support for the Nellymoser
speech codec used in flash.
</p>

<h3>October 9, 2007</h3>
<p>
Apart from a DNxHD encoder, PAFF decoding
support for H.264 was committed to SVN.
</p>

<h3>September 29, 2007</h3>
<p>
AMV audio and video decoding has arrived.
</p>

<h3>September 13, 2007</h3>
<p>
In about half a year of work since the
last update we have added among other things: DXA and Monkey's Audio demuxer
and decoder, DNxHD, Atrac3 and AC-3 decoders, QTRLE encoder, NUT and Matroska
muxers.
</p>

<h3>July 14, 2007</h3>
<p>
FFmpeg got 8 projects this year in the Google Summer of Code program.
</p>

<h3>March 09, 2007</h3>
<p>
Nine months without news but with heavy
development. A few select highlights are decoders for VC-1/WMV3/WMV9, VMware,
VP5, VP6 video and WavPack, IMC, DCA audio and a WMA encoder.
</p>
</div>
